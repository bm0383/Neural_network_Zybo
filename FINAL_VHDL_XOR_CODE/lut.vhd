library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.numeric_std.all;
entity lut is
    GENERIC (
        BIT_WIDTH : integer range 0 to 31 ;
        F : integer range 0 to 31
    );
    port (
      clk : in std_logic;
      in_vec : in  signed(BIT_WIDTH-1 downto 0);
      is_valid : in std_logic;
      out_vec_rez : out  signed(BIT_WIDTH-1 downto 0)
      );
end entity lut;

architecture Behavioral of lut  is
begin 
process(in_vec,clk)
    variable temp_in1 : signed(BIT_WIDTH-1 downto 0);
    variable temp_in2 : integer;
    variable temp_in_index : integer;
begin
     if(rising_edge(clk)) then
        temp_in1 := shift_right(signed(in_vec),(F-3));
        temp_in2 := to_integer(temp_in1);
        if(temp_in2 < -64) then
           temp_in_index := 0;
        elsif (temp_in2 > 63) then
            temp_in_index := 127;
        else
            temp_in_index := temp_in2 + 64;
        end if;
        if(is_valid = '1') then
            case (to_integer(to_signed(temp_in_index,8))) is
                WHEN 0 to 14 => out_vec_rez <= to_signed(0,BIT_WIDTH);
                WHEN 15 to 22 => out_vec_rez <= to_signed(1,BIT_WIDTH);
                WHEN 23 to 27 =>  out_vec_rez <= to_signed(2,BIT_WIDTH);
                WHEN 28 to 29 => out_vec_rez <= to_signed(3,BIT_WIDTH);
                WHEN 30 to 31 => out_vec_rez <= to_signed(4,BIT_WIDTH);
                WHEN 32 to 33 => out_vec_rez <= to_signed(5,BIT_WIDTH);
                WHEN 34 => out_vec_rez <= to_signed(6,BIT_WIDTH);
                WHEN 35 => out_vec_rez <= to_signed(7,BIT_WIDTH);
                WHEN 36 to 37  => out_vec_rez <= to_signed(8,BIT_WIDTH);
                WHEN 38 => out_vec_rez <= to_signed(10,BIT_WIDTH);
                WHEN 39 => out_vec_rez <= to_signed(11,BIT_WIDTH);
                WHEN 40 => out_vec_rez <= to_signed(12,BIT_WIDTH);
                WHEN 41 => out_vec_rez <= to_signed(14,BIT_WIDTH);
                WHEN 42 => out_vec_rez <= to_signed(15,BIT_WIDTH);
                WHEN 43 => out_vec_rez <= to_signed(17,BIT_WIDTH);
                WHEN 44 => out_vec_rez <= to_signed(19,BIT_WIDTH);
                WHEN 45 => out_vec_rez <= to_signed(22,BIT_WIDTH);
                WHEN 46 => out_vec_rez <= to_signed(24,BIT_WIDTH);
                WHEN 47 => out_vec_rez <= to_signed(27,BIT_WIDTH);
                WHEN 48 => out_vec_rez <= to_signed(31,BIT_WIDTH);
                WHEN 49 => out_vec_rez <= to_signed(34,BIT_WIDTH);
                WHEN 50 => out_vec_rez <= to_signed(38,BIT_WIDTH);
                WHEN 51 => out_vec_rez <= to_signed(42,BIT_WIDTH);
                WHEN 52 => out_vec_rez <= to_signed(47,BIT_WIDTH);
                WHEN 53 => out_vec_rez <= to_signed(52,BIT_WIDTH);
                WHEN 54 => out_vec_rez <= to_signed(57,BIT_WIDTH);
                WHEN 55 => out_vec_rez <= to_signed(63,BIT_WIDTH);
                WHEN 56 => out_vec_rez <= to_signed(69,BIT_WIDTH);
                WHEN 57 => out_vec_rez <= to_signed(75,BIT_WIDTH);
                WHEN 58 => out_vec_rez <= to_signed(82,BIT_WIDTH);
                WHEN 59 => out_vec_rez <= to_signed(89,BIT_WIDTH);
                WHEN 60 => out_vec_rez <= to_signed(97,BIT_WIDTH);
                WHEN 61 => out_vec_rez <= to_signed(104,BIT_WIDTH);
                WHEN 62 => out_vec_rez <= to_signed(112,BIT_WIDTH);
                WHEN 63 => out_vec_rez <= to_signed(120,BIT_WIDTH);
                WHEN 64 => out_vec_rez <= to_signed(128,BIT_WIDTH);
                WHEN 65 => out_vec_rez <= to_signed(136,BIT_WIDTH);
                WHEN 66 => out_vec_rez <= to_signed(144,BIT_WIDTH);
                WHEN 67 => out_vec_rez <= to_signed(152,BIT_WIDTH);
                WHEN 68 => out_vec_rez <= to_signed(159,BIT_WIDTH);
                WHEN 69 => out_vec_rez <= to_signed(167,BIT_WIDTH);
                WHEN 70 => out_vec_rez <= to_signed(174,BIT_WIDTH);
                WHEN 71 => out_vec_rez <= to_signed(181,BIT_WIDTH);
                WHEN 72 => out_vec_rez <= to_signed(187,BIT_WIDTH);
                WHEN 73 => out_vec_rez <= to_signed(193,BIT_WIDTH);
                WHEN 74 => out_vec_rez <= to_signed(199,BIT_WIDTH);
                WHEN 75 => out_vec_rez <= to_signed(204,BIT_WIDTH);
                WHEN 76 => out_vec_rez <= to_signed(209,BIT_WIDTH);
                WHEN 77 => out_vec_rez <= to_signed(214,BIT_WIDTH);
                WHEN 78 => out_vec_rez <= to_signed(218,BIT_WIDTH);
                WHEN 79 => out_vec_rez <= to_signed(222,BIT_WIDTH);
                WHEN 80 => out_vec_rez <= to_signed(225,BIT_WIDTH);
                WHEN 81 => out_vec_rez <= to_signed(229,BIT_WIDTH);
                WHEN 82 => out_vec_rez <= to_signed(232,BIT_WIDTH);
                WHEN 83 => out_vec_rez <= to_signed(234,BIT_WIDTH);
                WHEN 84 => out_vec_rez <= to_signed(237,BIT_WIDTH);
                WHEN 85 => out_vec_rez <= to_signed(239,BIT_WIDTH);
                WHEN 86 => out_vec_rez <= to_signed(241,BIT_WIDTH);
                WHEN 87 => out_vec_rez <= to_signed(242,BIT_WIDTH);
                WHEN 88 => out_vec_rez <= to_signed(244,BIT_WIDTH);
                WHEN 89 => out_vec_rez <= to_signed(245,BIT_WIDTH);
                WHEN 90 => out_vec_rez <= to_signed(246,BIT_WIDTH);
                WHEN 91 => out_vec_rez <= to_signed(248,BIT_WIDTH);
                WHEN 92 => out_vec_rez <= to_signed(248,BIT_WIDTH);
                WHEN 93 => out_vec_rez <= to_signed(249,BIT_WIDTH);
                WHEN 94 => out_vec_rez <= to_signed(250,BIT_WIDTH);
                WHEN 95 to 96 => out_vec_rez <= to_signed(251,BIT_WIDTH);
                WHEN 97 to 98 => out_vec_rez <= to_signed(252,BIT_WIDTH);
                WHEN 99 to 100 => out_vec_rez <= to_signed(253,BIT_WIDTH);
                WHEN 101 to 105 => out_vec_rez <= to_signed(254,BIT_WIDTH);
                WHEN 106 to 113 => out_vec_rez <= to_signed(255,BIT_WIDTH);
                WHEN 114 to 128 => out_vec_rez <= to_signed(256,BIT_WIDTH);
                
                --LUT ZA BIT_WIDTH = 12 F = 6
--                WHEN 0 => out_vec_rez <= to_signed(     0 ,BIT_WIDTH); 
--                WHEN 1 => out_vec_rez <= to_signed(      0 ,BIT_WIDTH);
--                WHEN 2  => out_vec_rez <= to_signed(     0,BIT_WIDTH);
--                WHEN 3 => out_vec_rez <= to_signed(      0,BIT_WIDTH);
--                WHEN 4  => out_vec_rez <= to_signed(     0,BIT_WIDTH);
--                WHEN 5 => out_vec_rez <= to_signed(      0,BIT_WIDTH);
--                WHEN 6  => out_vec_rez <= to_signed(     0,BIT_WIDTH);
--                WHEN 7  => out_vec_rez <= to_signed(     0,BIT_WIDTH);
--                WHEN 8 => out_vec_rez <= to_signed(     0,BIT_WIDTH);
--                WHEN 9 => out_vec_rez <= to_signed(     0,BIT_WIDTH);
--                WHEN 10 => out_vec_rez <= to_signed(    0,BIT_WIDTH);
--                WHEN 11 => out_vec_rez <= to_signed(    0,BIT_WIDTH);
--                WHEN 12  => out_vec_rez <= to_signed(   0,BIT_WIDTH);
--                WHEN 13 => out_vec_rez <= to_signed(    0,BIT_WIDTH);
--                WHEN 14 => out_vec_rez <= to_signed(    0,BIT_WIDTH);
--                WHEN 15 => out_vec_rez <= to_signed(    0,BIT_WIDTH);
--                WHEN 16 => out_vec_rez <= to_signed(    0,BIT_WIDTH);
--                WHEN 17 => out_vec_rez <= to_signed(    0,BIT_WIDTH);
--                WHEN 18  => out_vec_rez <= to_signed(   0,BIT_WIDTH);
--                WHEN 19  => out_vec_rez <= to_signed(   0,BIT_WIDTH);
--                WHEN 20  => out_vec_rez <= to_signed(   0,BIT_WIDTH);
--                WHEN 21 => out_vec_rez <= to_signed(    0,BIT_WIDTH);
--                WHEN 22 => out_vec_rez <= to_signed(    0,BIT_WIDTH);
--                WHEN 23  => out_vec_rez <= to_signed(   0,BIT_WIDTH);
--                WHEN 24  => out_vec_rez <= to_signed(   0,BIT_WIDTH);
--                WHEN 25   => out_vec_rez <= to_signed(  0,BIT_WIDTH);
--                WHEN 26   => out_vec_rez <= to_signed(  1,BIT_WIDTH);
--                WHEN 27  => out_vec_rez <= to_signed(   1,BIT_WIDTH);
--                WHEN 28  => out_vec_rez <= to_signed(   1,BIT_WIDTH);
--                WHEN 29  => out_vec_rez <= to_signed(   1,BIT_WIDTH);
--                WHEN 30 => out_vec_rez <= to_signed(    1,BIT_WIDTH);
--                WHEN 31 => out_vec_rez <= to_signed(    1,BIT_WIDTH);
--                WHEN 32  => out_vec_rez <= to_signed(   1,BIT_WIDTH);
--                WHEN 33  => out_vec_rez <= to_signed(   1,BIT_WIDTH);
--                WHEN 34  => out_vec_rez <= to_signed(   1,BIT_WIDTH);
--                WHEN 35  => out_vec_rez <= to_signed(   2,BIT_WIDTH);
--                WHEN 36  => out_vec_rez <= to_signed(   2,BIT_WIDTH);
--                WHEN 37  => out_vec_rez <= to_signed(   2,BIT_WIDTH);
--                WHEN 38 => out_vec_rez <= to_signed(    2,BIT_WIDTH);
--                WHEN 39  => out_vec_rez <= to_signed(   3,BIT_WIDTH);
--                WHEN 40  => out_vec_rez <= to_signed(   3,BIT_WIDTH);
--                WHEN 41  => out_vec_rez <= to_signed(   3,BIT_WIDTH);
--                WHEN 42  => out_vec_rez <= to_signed(   4,BIT_WIDTH);
--                WHEN 43  => out_vec_rez <= to_signed(   4,BIT_WIDTH);
--                WHEN 44  => out_vec_rez <= to_signed(   5,BIT_WIDTH);
--                WHEN 45  => out_vec_rez <= to_signed(   5,BIT_WIDTH);
--                WHEN 46  => out_vec_rez <= to_signed(   6,BIT_WIDTH);
--                WHEN 47   => out_vec_rez <= to_signed(  7,BIT_WIDTH);
--                WHEN 48  => out_vec_rez <= to_signed(   8,BIT_WIDTH);
--                WHEN 49   => out_vec_rez <= to_signed(  9,BIT_WIDTH);
--                WHEN 50   => out_vec_rez <= to_signed(  9,BIT_WIDTH);
--                WHEN 51  => out_vec_rez <= to_signed(   11,BIT_WIDTH);
--                WHEN 52  => out_vec_rez <= to_signed(   12,BIT_WIDTH);
--                WHEN 53  => out_vec_rez <= to_signed(   13,BIT_WIDTH);
--                WHEN 54  => out_vec_rez <= to_signed(   14,BIT_WIDTH);
--                WHEN 55  => out_vec_rez <= to_signed(   16,BIT_WIDTH);
--                WHEN 56  => out_vec_rez <= to_signed(   17,BIT_WIDTH);
--                WHEN 57  => out_vec_rez <= to_signed(   19,BIT_WIDTH);
--                WHEN 58  => out_vec_rez <= to_signed(   21,BIT_WIDTH);
--                WHEN 59  => out_vec_rez <= to_signed(   22,BIT_WIDTH);
--                WHEN 60  => out_vec_rez <= to_signed(   24,BIT_WIDTH);
--                WHEN 61  => out_vec_rez <= to_signed(   26,BIT_WIDTH);
--                WHEN 62  => out_vec_rez <= to_signed(   28,BIT_WIDTH);
--                WHEN 63  => out_vec_rez <= to_signed(   30,BIT_WIDTH);
--                WHEN 64  => out_vec_rez <= to_signed(  32,BIT_WIDTH);
--                WHEN 65   => out_vec_rez <= to_signed(  34,BIT_WIDTH);
--                WHEN 66  => out_vec_rez <= to_signed(   36,BIT_WIDTH);
--                WHEN 67  => out_vec_rez <= to_signed(   38,BIT_WIDTH);
--                WHEN 68  => out_vec_rez <= to_signed(   40,BIT_WIDTH);
--                WHEN 69  => out_vec_rez <= to_signed(   42,BIT_WIDTH);
--                WHEN 70  => out_vec_rez <= to_signed(   43,BIT_WIDTH);
--                WHEN 71  => out_vec_rez <= to_signed(   45,BIT_WIDTH);
--                WHEN 72  => out_vec_rez <= to_signed(   47,BIT_WIDTH);
--                WHEN 73  => out_vec_rez <= to_signed(   48,BIT_WIDTH);
--                WHEN 74  => out_vec_rez <= to_signed(   50,BIT_WIDTH);
--                WHEN 75  => out_vec_rez <= to_signed(   51,BIT_WIDTH);
--                WHEN 76  => out_vec_rez <= to_signed(   52,BIT_WIDTH);
--                WHEN 77   => out_vec_rez <= to_signed(  53,BIT_WIDTH);
--                WHEN 78   => out_vec_rez <= to_signed(  55,BIT_WIDTH);
--                WHEN 79  => out_vec_rez <= to_signed(   55,BIT_WIDTH);
--                WHEN 80  => out_vec_rez <= to_signed(   56,BIT_WIDTH);
--                WHEN 81  => out_vec_rez <= to_signed(   57,BIT_WIDTH);
--                WHEN 82  => out_vec_rez <= to_signed(   58,BIT_WIDTH);
--                WHEN 83  => out_vec_rez <= to_signed(   59,BIT_WIDTH);
--                WHEN 84  => out_vec_rez <= to_signed(   59,BIT_WIDTH);
--                WHEN 85  => out_vec_rez <= to_signed(   60,BIT_WIDTH);
--                WHEN 86  => out_vec_rez <= to_signed(   60,BIT_WIDTH);
--                WHEN 87  => out_vec_rez <= to_signed(   61,BIT_WIDTH);
--                WHEN 88   => out_vec_rez <= to_signed(  61,BIT_WIDTH);
--                WHEN 89   => out_vec_rez <= to_signed(  61,BIT_WIDTH);
--                WHEN 90   => out_vec_rez <= to_signed(  62,BIT_WIDTH);
--                WHEN 91  => out_vec_rez <= to_signed(   62,BIT_WIDTH);
--                WHEN 92   => out_vec_rez <= to_signed(  62,BIT_WIDTH);
--                WHEN 93    => out_vec_rez <= to_signed( 62,BIT_WIDTH);
--                WHEN 94   => out_vec_rez <= to_signed(  63,BIT_WIDTH);
--                WHEN 95   => out_vec_rez <= to_signed(  63,BIT_WIDTH);
--                WHEN 96   => out_vec_rez <= to_signed(  63,BIT_WIDTH);
--                WHEN 97   => out_vec_rez <= to_signed(  63,BIT_WIDTH);
--                WHEN 98   => out_vec_rez <= to_signed(  63,BIT_WIDTH);
--                WHEN 99  => out_vec_rez <= to_signed(   63,BIT_WIDTH);
--                WHEN 100 => out_vec_rez <= to_signed(   63,BIT_WIDTH);
--                WHEN 101  => out_vec_rez <= to_signed(  63,BIT_WIDTH);
--                WHEN 102  => out_vec_rez <= to_signed(  63,BIT_WIDTH);
--                WHEN 103  => out_vec_rez <= to_signed(  64,BIT_WIDTH);
--                WHEN 104 => out_vec_rez <= to_signed(   64,BIT_WIDTH);
--                WHEN 105  => out_vec_rez <= to_signed(  64,BIT_WIDTH);
--                WHEN 106  => out_vec_rez <= to_signed(  64,BIT_WIDTH);
--                WHEN 107  => out_vec_rez <= to_signed(  64,BIT_WIDTH);
--                WHEN 108  => out_vec_rez <= to_signed(  64,BIT_WIDTH);
--                WHEN 109 => out_vec_rez <= to_signed(   64,BIT_WIDTH);
--                WHEN 110  => out_vec_rez <= to_signed(  64,BIT_WIDTH);
--                WHEN 111  => out_vec_rez <= to_signed(  64,BIT_WIDTH);
--                WHEN 112  => out_vec_rez <= to_signed(  64,BIT_WIDTH);
--                WHEN 113  => out_vec_rez <= to_signed(  64,BIT_WIDTH);
--                WHEN 114  => out_vec_rez <= to_signed(  64,BIT_WIDTH);
--                WHEN 115  => out_vec_rez <= to_signed(  64,BIT_WIDTH);
--                WHEN 116  => out_vec_rez <= to_signed(  64,BIT_WIDTH);
--                WHEN 117  => out_vec_rez <= to_signed(  64,BIT_WIDTH);
--                WHEN 118  => out_vec_rez <= to_signed(  64,BIT_WIDTH);
--                WHEN 119  => out_vec_rez <= to_signed(  64,BIT_WIDTH);
--                WHEN 120  => out_vec_rez <= to_signed(  64,BIT_WIDTH);
--                WHEN 121  => out_vec_rez <= to_signed(  64,BIT_WIDTH);
--                WHEN 122  => out_vec_rez <= to_signed(  64,BIT_WIDTH);
--                WHEN 123  => out_vec_rez <= to_signed(  64,BIT_WIDTH);
--                WHEN 124  => out_vec_rez <= to_signed(  64,BIT_WIDTH);
--                WHEN 125  => out_vec_rez <= to_signed(  64,BIT_WIDTH);
--                WHEN 126  => out_vec_rez <= to_signed(  64,BIT_WIDTH);
--                WHEN 127  => out_vec_rez <= to_signed(  64,BIT_WIDTH);
--                WHEN 128  => out_vec_rez <= to_signed(  64,BIT_WIDTH);
                
                when others => out_vec_rez <= (others => '1');
            end case;
         else
            out_vec_rez <= (others => '0');
         end if;
     end if;
end process;
end Behavioral;